@model MVC_RecursionPermission.Models.Member

@{
    ViewBag.Title = "Edit";
}

<h2>權限人員設定</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>編輯</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <p style="padding:6px 0 0 6px;">@Html.DisplayFor(model => model.Account)</p>
                @Html.HiddenFor(model => model.Account)
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Password)
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Permission, new { htmlAttributes = new { @class = "form-control" } })*@


                <div class="permission" style="margin-left:-20px; padding-top:7px"></div>
                @Html.HiddenFor(model => model.Permission)
                @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="/dist/tree.min.js"></script>

    <script>
        let data = @Html.Raw(ViewBag.PermissionData);

        // 創建一個 Tree 物件，並初始化它的選項
        let tree = new Tree('.permission', {
            // 設定树形結構的數據，這可能包含了有關權限的相關數據
            data: data,

            // 設定树形結構的默認展開深度為 3 層
            closeDepth: 3,

            // 當樹形結構加載完成後執行的回調函數
            loaded: function () {
                // 設置一些初始選中的節點

                this.values = @Html.Raw(@ViewBag.OldPermissions);

                // 打印已選中的節點到控制台
                console.log(this.selectedNodes);

                // 打印 this.values 的值到控制台
                console.log(this.values);

                // 設置一些禁用的節點
                this.disables = []
            },

            // 當樹形結構的選中狀態發生改變時執行的回調函數
            onChange: function () {
                // 打印 this.values 的值到控制台
                console.log(this.values);
                //將 this.values 的值設定為 #Permission 元素的值
                $("#Permission").val(this.values)
            }
        })
    </script>
}